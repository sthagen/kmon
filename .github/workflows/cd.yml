name: Continuous Deployment

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set the release version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:11}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install X11 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --allow-unauthenticated -y -qq libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: stable
          args: --release --locked --all-features
      - name: "Publish on crates.io"
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CARGO_TOKEN }}
      - name: Publish on GitHub
        run: |
          cd target/release
          strip -s kmon
          tar czvf kmon-${{ env.RELEASE_VERSION }}.tar.gz kmon ../../LICENSE ../../README.md ../../man/kmon.8
          shasum -a 256 kmon-${{ env.RELEASE_VERSION }}.tar.gz > kmon-${{ env.RELEASE_VERSION }}.sha256
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/kmon-${{ env.RELEASE_VERSION }}.tar.gz
            target/release/kmon-${{ env.RELEASE_VERSION }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up SSH for AUR
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_SSH_PUBLIC }}" | base64 --decode > ~/.ssh/aur.pub
          echo "${{ secrets.AUR_SSH_PRIVATE }}" | base64 --decode > ~/.ssh/aur
          echo "Host aur.archlinux.org" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/aur" >> ~/.ssh/config
          echo "  User aur" >> ~/.ssh/config
          chmod 600 ~/.ssh/aur ~/.ssh/aur.pub ~/.ssh/config
          eval $(ssh-agent)
          ssh-add -k ~/.ssh/aur
          ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts
          git config --global user.name "orhun"
          git config --global user.email "orhunparmaksiz@gmail.com"
      - name: Publish on AUR (main)
        run: |
          git clone ssh://aur@aur.archlinux.org/kmon.git && cd kmon
          wget https://github.com/orhun/kmon/archive/v${{ env.RELEASE_VERSION }}.tar.gz
          sed "s/^pkgver=.*\$/pkgver=${{ env.RELEASE_VERSION }}/" -i PKGBUILD
          sed "s/^sha512sums=(.*)\$/sha512sums=('`sha512sum v${{ env.RELEASE_VERSION }}.tar.gz | cut -d ' ' -f 1`')/" -i PKGBUILD
          sed "s/\tpkgver = .*\$/\tpkgver = ${{ env.RELEASE_VERSION }}/" -i .SRCINFO
          sed "s|\tsource = .*\$|\tsource = kmon-${{ env.RELEASE_VERSION }}.tar.gz::https://github.com/orhun/kmon/archive/v${{ env.RELEASE_VERSION }}.tar.gz|" -i .SRCINFO
          sed "s/\tsha512sums = .*\$/\tsha512sums = `sha512sum v${{ env.RELEASE_VERSION }}.tar.gz | cut -d ' ' -f 1`/" -i .SRCINFO
          git add PKGBUILD .SRCINFO
          git commit -m "Release v${{ env.RELEASE_VERSION }}"
          git push
      - name: Publish on AUR (git)
        run: |
          version=$(git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g')
          git clone ssh://aur@aur.archlinux.org/kmon-git.git && cd kmon-git
          sed "s/^pkgver=.*\$/pkgver=$version/" -i PKGBUILD
          sed "s/\tpkgver = .*\$/\tpkgver = $version/" -i .SRCINFO
          git add PKGBUILD .SRCINFO
          git commit -m "Release v$version"
          git push
      - name: Publish on AUR (binary)
        run: |
          git clone ssh://aur@aur.archlinux.org/kmon-bin.git && cd kmon-bin
          sum=$(wget https://github.com/orhun/kmon/releases/download/v${{ env.RELEASE_VERSION }}/kmon-${{ env.RELEASE_VERSION }}.sha256 -q -O - | cut -d ' ' -f 1)
          sed "s/^pkgver=.*\$/pkgver=${{ env.RELEASE_VERSION }}/" -i PKGBUILD
          sed "s/^sha256sums=(.*)\$/sha256sums=('$sum')/" -i PKGBUILD
          sed "s/\tpkgver = .*\$/\tpkgver = ${{ env.RELEASE_VERSION }}/" -i .SRCINFO
          sed "s|\tsource = .*\$|\tsource = https://github.com/orhun/kmon/releases/download/v${{ env.RELEASE_VERSION }}/kmon-${{ env.RELEASE_VERSION }}.tar.gz|" -i .SRCINFO
          sed "s/\tsha256sums = .*\$/\tsha256sums = $sum/" -i .SRCINFO
          git add PKGBUILD .SRCINFO
          git commit -m "Release v${{ env.RELEASE_VERSION }}"
          git push
      - name: Publish the Docker Image
        run: |
          docker build -t kmon .
          docker tag kmon ${{ secrets.DOCKER_USERNAME }}/kmon:${{ env.RELEASE_VERSION }}
          docker tag kmon docker.pkg.github.com/orhun/kmon/kmon:${{ env.RELEASE_VERSION }}
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/kmon:${{ env.RELEASE_VERSION }}
          echo ${{ secrets.GITHUB_TOKEN }} | docker login -u orhun docker.pkg.github.com --password-stdin
          docker push docker.pkg.github.com/orhun/kmon/kmon:${{ env.RELEASE_VERSION }}
