name: Continuous Deployment

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set the release version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:11}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install X11 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --allow-unauthenticated -y -qq libxcb-shape0-dev libxcb-xfixes0-dev gpg
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: stable
          args: --release --locked --all-features
      - name: Publish on GitHub
        run: |
          cd target/release
          strip -s kmon
          tar czvf kmon-${{ env.RELEASE_VERSION }}.tar.gz kmon ../../LICENSE ../../README.md ../../man/kmon.8
          shasum -a 256 kmon-${{ env.RELEASE_VERSION }}.tar.gz > kmon-${{ env.RELEASE_VERSION }}.sha256
          shasum -a 512 kmon-${{ env.RELEASE_VERSION }}.tar.gz > kmon-${{ env.RELEASE_VERSION }}.sha512
          echo "${{ secrets.GPG_RELEASE_KEY }}" | base64 --decode > private.key
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --pinentry-mode=loopback --passphrase-fd 0 --import private.key
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --pinentry-mode=loopback --passphrase-fd 0 --detach-sign kmon-${{ env.RELEASE_VERSION }}.tar.gz
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/kmon-${{ env.RELEASE_VERSION }}.tar.gz
            target/release/kmon-${{ env.RELEASE_VERSION }}.tar.gz.sig
            target/release/kmon-${{ env.RELEASE_VERSION }}.sha256
            target/release/kmon-${{ env.RELEASE_VERSION }}.sha512
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Publish on crates.io"
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CARGO_TOKEN }}
          continue-on-error: true
      - name: Publish the Docker Image
        run: |
          docker build -t kmon .
          docker tag kmon ${{ secrets.DOCKER_USERNAME }}/kmon:${{ env.RELEASE_VERSION }}
          docker tag kmon docker.pkg.github.com/orhun/kmon/kmon:${{ env.RELEASE_VERSION }}
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/kmon:${{ env.RELEASE_VERSION }}
          echo ${{ secrets.GITHUB_TOKEN }} | docker login -u orhun docker.pkg.github.com --password-stdin
          docker push docker.pkg.github.com/orhun/kmon/kmon:${{ env.RELEASE_VERSION }}
